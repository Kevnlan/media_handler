version: '3.8'

services:
  auth_server:
    build:
      context: ./auth_server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DB_ENGINE=${DB_ENGINE:-django.db.backends.postgresql}
      - AUTH_DB_NAME=${AUTH_DB_NAME:-auth_db}
      - DB_USER=${DB_USER:-django_user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_HOST=${DB_HOST:-localhost}
      - DB_PORT=${DB_PORT:-5432}
    volumes:
      - ./auth_server:/app
      - ./.env:/app/.env  # Mount .env file
    command: python manage.py runserver 0.0.0.0:8000

  backend_server:
    build:
      context: ./backend_server
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DEBUG=${DEBUG:-True}
      - BACKEND_SECRET_KEY=${BACKEND_SECRET_KEY}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DB_ENGINE=${DB_ENGINE:-django.db.backends.postgresql}
      - BACKEND_DB_NAME=${BACKEND_DB_NAME:-backend_db}
      - DB_USER=${DB_USER:-django_user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_HOST=${DB_HOST:-localhost}
      - DB_PORT=${DB_PORT:-5432}
      - CORS_ALLOW_ALL_ORIGINS=${CORS_ALLOW_ALL_ORIGINS:-True}
    volumes:
      - ./backend_server:/app
      - ./backend_server/media:/app/media
      - ./.env:/app/.env  # Mount .env file
    command: python manage.py runserver 0.0.0.0:8001

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend_server/media:/var/www/media
    depends_on:
      - auth_server
      - backend_server
