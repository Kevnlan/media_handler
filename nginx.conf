server {
    listen 80;
    server_name localhost;
    
    # Basic security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Handle CORS - simple approach
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "WorkNomads API Server - Healthy\n";
        add_header Content-Type text/plain;
    }

    # Handle OPTIONS requests for CORS
    location / {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # Default info page
        return 200 "WorkNomads API Server\n\nEndpoints:\n- /api/auth/ - Authentication\n- /api/media/ - Media API\n- /health - Health check\n- /media/ - Static files\n";
        add_header Content-Type text/plain;
    }

    # Auth service routes
    location /api/auth/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle OPTIONS for CORS
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Auth docs and admin
    location ~ ^/(admin|api/docs|api/schema|docs)/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Media service routes (no trailing slash - matches your backend)
    location /api/media {
        proxy_pass http://127.0.0.1:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Large file upload support
        client_max_body_size 100M;
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Handle OPTIONS for CORS
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # Media service routes with path (no trailing slash)
    location ~ ^/api/media/(.*)$ {
        proxy_pass http://127.0.0.1:8001/api/media/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Large file upload support
        client_max_body_size 100M;
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Handle OPTIONS for CORS
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Serve media files directly
    # Note: Update this path to match your project location
    location /media/ {
        alias __PROJECT_DIR__/backend_server/media/;
        expires 1d;
        add_header Cache-Control "public";
        
        # Security - block executable files
        location ~* \.(php|py|sh|exe|bat)$ {
            deny all;
        }
    }
    
    # API Gateway proxy (optional)
    location /gateway/ {
        proxy_pass http://127.0.0.1:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
